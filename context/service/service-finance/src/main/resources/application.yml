server:
  port: ${PORT:8080}
  servlet:
    context-path: /api

spring:
  application:
    name: service-finance
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost:5432}/${DB_NAME:bank}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USERNAME:admin}
    password: ${DB_PASSWORD:admin}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate.default_schema: BANK
      hibernate.jdbc.lob.non_contextual_creation: true
      hibernate.show_sql: true
      hibernate.format_sql: true
  sql:
    init:
      platform: org.hibernate.dialect.PostgreSQLDialect
  cloud:
    openfeign:
      circuitbreaker:
        enabled: true
      httpclient:
        connection-timeout: 5000
        ok-http:
          read-timeout: 5000
  kafka:
    template:
      default-topic: notifications
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

eureka:
  client:
    serviceUrl:
      defaultZone: ${LB_EUREKA:http://localhost:8761}/eureka
    enabled: true
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2

resilience4j:
  circuitbreaker:
    instances:
      service-account:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        slowCallRateThreshold: 50
        slowCallDurationThreshold: 2s
